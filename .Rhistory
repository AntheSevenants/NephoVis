arrange(desc(n))
agree_conf_props %>%
filter(type == 'heet') %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = "Proportions of agreement-confidence combinations for 'heet'",
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
agree_conf_props %>%
filter(type == 'heet') %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = "Proportions of agreement-confidence combinations for 'heet'",
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
agree_conf_props %>%
filter(type == 'geestig') %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = "Proportions of agreement-confidence combinations for 'heet'",
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
t = 'geestig'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
t = 'heet'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
t = 'geestig'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
t = 'heet'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
agreement %>% filter(confidence <= 1, agree_fct == 'full') %>% select(type, token_id) %>% unique() %>% count(type) %>%
arrange(desc(n))
agreement %>%
filter(confidence >= 4, agree_fct == "none") %>%
select(type, token_id) %>% unique() %>% count(type) %>%
arrange(desc(n))
t = 'herkennen'
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)/(O_total-E_total)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Normalized difference between observed and expected proportions"
)
agree_conf_props %>%
filter(type == t) %>%
ggplot() +
geom_col(aes(x = confidence, y = (O_type-E_type)))+
# geom_col(aes(x = confidence, y = (o_type_agree_conf-e_type_agree_conf)/(o_gral_agree_conf-e_gral_agree_conf))) +
facet_wrap(~ agree_fct, scales = "free_x") +
labs(
title = paste("Proportions of agreement-confidence combinations for", t),
x = "Confidence",
y = "Raw difference between observed and expected proportions"
)
tokens %>%
filter(sense_1 == 'geen'|sense_2 =='geen'|sense_3 == 'geen'| sense_4 == 'geen')
agreement
agreement %>% filter(sense == 'geen')
geen_tokens <- agreement %>% filter(sense == 'geen') %>% pull(token_id) %>% unique()
agreement
agreement %>% filter(token_id %in% geen_tokens)
agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence) %>% write_tsv(paste(input_dir, "geen.tsv"))
concordance_dir <- "C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/Annotation/"
geen <- agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
for (t in unique(geen$type)) {print(t)}
print(nrow(read_tsv))
print(nrow(conc))
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, 'tsv'))
print(nrow(conc))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
print(nrow(conc))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
geen <- left_join(geen, conc, by=c(id = 'token_id'))
}
for (t in unique(geen$type)) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
geen <- left_join(geen, conc, by=c(token_id = 'id'))
}
warnings()
geen
geen <- agreement %>% filter(token_id %in% geen_tokens) %>% arrange(token_id, sense, confidence)
extract_geen <- function(t) {
conc <- read_tsv(paste0(concordance_dir, t, '.tsv'))
return(filter(conc, id %in% geen$token_id))
}
geen %>% filter(type == 'blik')
geen %>% filter(type == 'blik') %>% pull(token_id) %>% unique() %>% length
nrow(extract_geen('blik'))
geen_conc <- bind_rows(map(unique(geen$type), extract_geen))
nrow(geen_conc)
geen_conc
geen_conc <- geen_conc %>% select(-X1, -file)
geen %>% join_left(geen_conc, by=c(token_id = 'id'))
geen %>% left_join(geen_conc, by=c(token_id = 'id'))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>% write_tsv(paste0(input_dir, 'geen.tsv'))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator)
str_replace('15_3', '[0-9]+(_[0-9])', ''\\1)
str_replace('15_3', '[0-9]+(_[0-9])', ''\\1')
str_replace('15_3', '[0-9]+(_[0-9])', '\\1')
tokens
return(ann)
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(annotator, '[0-9]+(_[0-9])', 'comments\\1')
return(ann)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
return(ann)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(!!ann) %>% .[1]
return(com)
}))
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
# select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
}))
geen %>% left_join(geen_conc, by=c(token_id = 'id')) %>%
# select(token_id, annotator) %>%
mutate(comment = map2_chr(token_id, annotator, function(x, y) {
ann <- str_replace(y, '[0-9]+(_[0-9])', 'comments\\1')
com <- tokens %>% filter(token_id == x) %>% pull(ann) %>% .[1]
return(com)
})) %>% write_tsv(paste0(input_dir, 'geen.tsv'))
definitions
definitions %>% filter(lemma == 'blik')
definitions %>% filter(lemma == 'dof')
definitions %>% filter(lemma == 'gekleurd')
zwart <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv")
zwart %>% select(sense.woordenschatjes)
defs <- jsonlite::fromJSON("C:/Users/u0118974/xampp/htdocs/mo")
defs <- jsonlite::fromJSON("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/Annotation/woordenschatjes.definitions.json")
defs[['zwart']]
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])})) %>% select(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])})) %>% count(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}})) %>% count(sense.woordenschatjes)
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}}))
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}}))
zwart %>% mutate(sense.woordenschatjes = map_chr(sense.woordenschatjes, function(x) {if (x %in% defs[['zwart']]$code) {return(pull(filter(defs[['zwart']], code == x), 'definition')[1])} else {return('geen')}})) %>% write_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv")
read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/zwart/zwart.tsv") %>% count(sense.woordenschatjes)
library(knitr)
library(rmdformats)
library(kfigr)
library(kableExtra)
library(tidyverse)
library(RColorBrewer)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_hooks$set(fig.cap = function(options){
# in this figr, the first TRUE indicates full caption (include 'Figure')
# FALSE points to adding a link (TRUE when I reference in text)
# the first and last arguments retrieve options from the chunk
first_part = figr(options$label, TRUE, FALSE, options$anchor)
text = options$fig.cap
options$fig.cap = paste0(first_part, ". ", text)
options
})
opts_knit$set(width=75)
input_dir <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/"
tokens <- read_tsv(paste0(input_dir, "token_annotation.tsv"), col_types = cols()) %>%
arrange(type, token_id)
batches_df <- read_tsv(paste0(input_dir, "batches.tsv")) %>%
mutate(username = if_else(username == 'severine.vankessel2', 'severine.vankessel', username))
types <- read_tsv(paste0(input_dir, "types.tsv"))
definitions <- read_tsv(paste0(input_dir, "definitions.tsv"))
definitions %>% filter(lemma == 'gemeen')
definitions %>% filter(lemma == 'gemeen')
definitions %>% filter(lemma == 'grijs')
definitions %>% filter(lemma == 'haken')
definitions %>% filter(lemma == 'haken') %>% pull(definition)
library(knitr)
library(rmdformats)
library(kfigr)
library(kableExtra)
library(tidyverse)
library(RColorBrewer)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_hooks$set(fig.cap = function(options){
# in this figr, the first TRUE indicates full caption (include 'Figure')
# FALSE points to adding a link (TRUE when I reference in text)
# the first and last arguments retrieve options from the chunk
first_part = figr(options$label, TRUE, FALSE, options$anchor)
text = options$fig.cap
options$fig.cap = paste0(first_part, ". ", text)
options
})
opts_knit$set(width=75)
input_dir <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/"
tokens <- read_tsv(paste0(input_dir, "token_annotation.tsv"), col_types = cols()) %>%
arrange(type, token_id)
batches_df <- read_tsv(paste0(input_dir, "batches.tsv")) %>%
mutate(username = if_else(username == 'severine.vankessel2', 'severine.vankessel', username))
types <- read_tsv(paste0(input_dir, "types.tsv"))
definitions <- read_tsv(paste0(input_dir, "definitions.tsv"))
definitions
lemmas <- unique(definitions$lemma)
definitions %>% filter(lemma == lemmas[4])
definitions %>% filter(lemma == lemmas[4]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[5]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[6]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[7]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[8]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[9]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[10]) %>% select(example, definition, my_dist)
i = 10
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
'gloeiend' %in% tokens$type
i = i + 1
'gloeiend' %in% tokens$type
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
length(lemmas)
lemmas
length(unique(tokens$type))
unique(tokens$type)
l2 <- unique(tokens$type)
l2[!l2 %in% lemmas]
'gloeiend' %in% lemmas
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i-1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
lemmas
i
lemmas[11]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist) %>% pull(definition)
i = i + 1
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
i = i + 1; lemmas[i]
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist)
definitions %>% filter(lemma == lemmas[i]) %>% select(example, definition, my_dist) %>% pull(example)
i
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(definition, example, freq)
definitions <- read_tsv(filename, locale = locale(encoding = 'latin1'))
filename <- "C:/Users/u0118974/Box Sync/Nederlands wolken/Output/Merges/definitions.tsv"
definitions <- read_tsv(filename, locale = locale(encoding = 'latin1'))
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(sense, definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq)
definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq) %>%
separate(code, into=c('lemma', 'sense'))
d1 <- definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
d1 <- definitions %>%
filter(lemma %in% c('hoopvol', 'geestig', 'hachelijk')) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
}
show_defs(c('hoopvol', 'geestig', 'hachelijk'))
deframe(count(definitions, lemma))
deframe(count(definitions, lemma))[c('hoopvol', 'geestig')]
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(definitions, lemma))[lemmas])
}
show_defs(c('hoopvol', 'geestig', 'hachelijk'))
show_defs(c('heilzaam', 'gekleurd', 'hoekig', 'dof'))
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
show_defs <- function(lemmas) {
d1 <- definitions %>%
filter(lemma %in% lemmas) %>%
select(code, definition, example, freq = my_dist) %>%
separate(code, into=c('lemma', 'sense')) %>%
arrange(lemma, sense)
kable(select(d1, -lemma)) %>%
kable_styling() %>%
pack_rows(index = deframe(count(d1, lemma)))
}
show_defs(c('heilzaam', 'gekleurd', 'hoekig', 'dof'))
show_defs(c('geldig', 'hemels', 'gemeen'))
unlink('C:/Users/u0118974/Box Sync/rMarkdown/DutchCaseStudies_cache', recursive = TRUE)
lemmas
lemmas[1:3]
str_c("'", lemmas[1:3], "'")
str_c("'", lemmas[1:3], "'", collapse = ", ")
sort(str_c("'", lemmas[1:3], "'", collapse = ", "))
str_c("'", sort(lemmas[1:3]), "'", collapse = ", ")
library(tidyverse)
ann <- read_tsv("C:/Users/u0118974/Desktop/Subtle Annotator.tsv")
ann
ann <- ann %>% filter(id != 'null')
ann
ann <- ann %>% select(-comments)
conc <- read_tsv("C:/Users/u0118974/Desktop/church.tsv")
ann <- left_join(ann, conc, by='id')
ann
ggplot(ann) + geom_bar(aes(x = variety, fill == sense))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = compound, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip()
ann$id
ann %>% mutate(genre = str_replace(id, "church/n/[a-z_]+([gb])[0-9]+/[0-9]+", "\\1"))
ann <- ann %>% mutate(genre = str_replace(id, "church/n/[a-z_]+([gb])[0-9]+/[0-9]+", "\\1"))
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ genre)
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip()
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ compound)
ggplot(ann) + geom_bar(aes(x = variety, fill = sense)) + coord_flip() + facet_wrap(~ compound, scales = "free_x")
ggplot(ann) + geom_bar(aes(x = variety, fill = compound)) + coord_flip() + facet_wrap(~ sense, scales = "free_x")
library(tidyverse)
setwd("C:/Users/u0118974/xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/")
d <- read_tsv("horde/horde.models.dist.tsv")
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.1000') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc4.nav.10000, horde.foc10.nav.ppmi_weight.bound.min1.soc4.all.10000)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.1000')
d %>% pull(`_model`)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000')
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000,
horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.10000)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
t
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
t %>% deframe
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
t %>% colnames
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
t
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
dataframe
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
data.frame
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
data.frame %>% t
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000') %>%
data.frame %>% deframe
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.all') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000,
horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.10000)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.10000') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.10000,
horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.10000)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.5000') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.5000,
horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.5000)
d %>% filter(`_model` == 'horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.5000') %>%
select(horde.foc10.nav.ppmi_weight.bound.min1.soc10.nav.5000,
horde.foc10.nav.ppmi_weight.bound.min1.soc10.all.5000)
